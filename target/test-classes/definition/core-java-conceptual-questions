Please answer the below core-java Questions:

What is programing language?
A. A programming language is a computer language programmers
use to develop software programs, scripts, or other sets of
instructions for computers to execute.




What jdk contains or composed of and define each components?
A. JDK contains a private Java Virtual Machine (JVM) and a few other
resources such as an interpreter/loader (Java), a compiler (javac), an archiver (jar),
a documentation generator (Javadoc) etc. to complete the development of a Java Application.
All the components are explained below:

Java: Java is a high-level, class-based, object-oriented programming language that is designed
to have as few implementation dependencies as possible.

Javac: javac is the primary Java compiler included in the Java Development Kit from Oracle Corporation.

Jar: A JAR file is a package file format typically used to aggregate many Java class files and
associated metadata and resources into one file for distribution. JAR files are archive files that
include a Java-specific manifest file. They are built on the ZIP format and typically have a .jar file
extension.

Javadoc: Javadoc is a documentation generator for the Java language, it is used for generating API
documentation in HTML format from Java source code.



What is IDE?
A. An integrated development environment (IDE) is a software suite that consolidates basic
tools required to write and test software. Such as: NetBeans, Eclipse, IntelliJ, and Visual Studio etc.



What are the IDEs available in the market to support java?
A. IntelliJ IDEA, Eclipse. NetBeans. Oracle JDeveloper



Explain the entire java life cycle.
A. There are three main stages in the life cycle of a java program. They are:
1. Editing the program: First, we will hae to start with typing the program in a text-editor (ex: notepad,
notepad++, wordpad, textedit etc). After completing editing of the program, we have to save the file.
While saving the file we should remember that the file must be saved with .java extension.

2. Compiling the source code: Second step is compilation. The name of the Java compiler is javac.
The input to the compiler is Java source code which is available in Sample.java. The output of the
compiler is machine independent or platform independent code which is known as bytecode. The file
which is generated after compilation is .class file.

3. Executing the byte code: Last step is execution. The bytecode generated by the compiler will be
executed by Java Virtual Machine (JVM). Input to the JVM is bytecode and output is machine code
(0’s and 1’s) which will be executed by the CPU of the local machine.


what is class?
A. Class is a template used to create objects and to define object data types and methods.

What is object?
A. A Java object is a member (also called an instance) of a Java class. Each object has an identity,
a behavior and a state.

What is the entry point of an application?
A. An application entry point identifies a resource that is an access point to an application.
Application entry points are used to control users' access to different versions of an application
that is deployed on a platform.

Why main is static?
A. The main() method is static so that JVM can invoke it without instantiating the class.
This also saves the unnecessary wastage of memory which would have been used by the object declared
only for calling the main() method by the JVM.

Which class is the superclass of all classes?
A. The Object class, which is stored in the java. lang package, is the ultimate superclass of all Java
classes (except for Object).

What is difference between path and classpath variables?
A. The main difference between PATH and CLASSPATH is that Path is set for java tools in java programs
like java and javac, which are used to compile your code. Whereas CLASSPATH is used by System or
Application class loader to locate and load compile Java bytecodes stored in the . class file.

What is the difference between an Interface and Abstract class?
A. The main difference between an interface and an abstract class is that an interface cannot have
state, whereas the abstract class can have state with instance variables.

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
A. No, we cannot create an object of abstract class or interface since they are incomplete class
(interface is not even considered as a class). We can implement a subclass of abstract
class which, of course, must not be abstract.

what is Access Specifier?
A.

What is OOP ? Define each feature of java OOP.
A.

What is Java Package and which package is imported by default?
A.

What is API? Name list of API that you have used so far.
Does java support multiple inheritance, explain why or why not?
What is method overloading and when it happens?
Explain exceptions in java and how to handle it.
What is static keyword in java? How it has been used in variables and methods ?
What is final and how it has been used variables and methods?
What is final, finally and finalize?
What is a constructor ?
Can we have multiple constructors in a class?
If we don't have a constructor declared, what is called during the object creation?
What is "this" keyword in java ?
What is "super" keyword in java? How many possible way can you use?
What is JVM stand for ?
Is JVM platform independent?
What version of java are you using?
What is JAR stand for ?
What is the difference between JDK and JVM?
What is the difference between JVM and JRE?
What is compile time and run time?
What is heap?
How java manage it's memory?
What is the difference between String, StringBuffer and StringBuilder?
What is Singleton class?
What is Serialization and Deserialization?
when to use transient variable in java?
Difference between while and do..while loop?
What is Enum?
What is Iterator?
Which one will take more memory, an int or Integer?
Why is String Immutable in Java?
What is constructor chaining in Java?
The difference between Serial and Parallel Garbage Collector?
What is JIT stands for?
Explain Java Heap space and Garbage collection?
Can you guarantee the garbage collection process?
What is the difference between stack and heap in Java?
What is reflection in java and why is it useful?
what is multithreading in java?
What is the use of synchronization in Java?
What is Framework?
What are the testing Framework available in java?
Difference between jUnit and testNG?
What are the dependencies for this project?
what is dependency injection in java?
What is static binding and dynamic binding?









